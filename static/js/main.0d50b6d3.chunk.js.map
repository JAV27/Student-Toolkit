{"version":3,"sources":["Comp/Header/Header.jsx","Comp/Footer/FooterLink.jsx","Comp/Footer/Footer.jsx","Comp/Body/Button/Button.jsx","Comp/Body/Input/Input.jsx","Comp/Body/Calculator.jsx","Comp/Body/Gpa.jsx","Comp/Body/Grades.jsx","Comp/Body/Body.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","FooterLink","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayed","val","_this2","className","onClick","React","Component","Footer","Footer_FooterLink","isEqual","Button","style","children","backgroundColor","concat","handleClick","Input","input","Calculator","addNumber","setState","clicked","addOperator","handleClear","handleEqual","math","Input_Input_Input","Button_Button_Button","Gpa","Grades","Body","calcStyles","display","gpaStyles","gradeStyles","show","Body_Gpa","Body_Grades","class","Body_Calculator","styles","App","Comp_Header_Header","Comp_Body_Body","Comp_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d50b6d3.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <h1>Student Toolkit</h1>\n    )\n}\n\nexport default Header;\n","import React from 'react';\n\n\n\nclass FooterLink extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayed: this.props.val\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"link\" onClick={() => this.props.onClick(this.state.displayed)}>\n                {this.props.val}\n            </div>\n        )\n    }\n}\n\nexport default FooterLink;\n","import React from 'react';\nimport FooterLink from './FooterLink';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <footer>\n                <FooterLink val=\"Calculator\" onClick={this.props.onClick}/>\n                <FooterLink val=\"GPA Calculator\" onClick={this.props.onClick}/>\n                <FooterLink val=\"Class Grade Calculator\" onClick={this.props.onClick}/>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Button.css';\n\nconst isEqual = val => {\n    return (val === \"=\");\n}\n\nconst changeColor = val => {\n    if(val === \"=\") {\n        return {backgroundColor: \"cornflowerblue\"}\n    } else if(val === \"+\" || val === \"-\" || val === \"*\" || val === \"/\") {\n        return {backgroundColor: \"dimgrey\"}\n    }\n}\n\nexport const Button = props => (\n    <div style={changeColor(props.children)} className={`button ${isEqual(props.children) ? \"double\" : null}`} onClick={() => props.handleClick(props.children)}>\n        {props.children}\n    </div>\n);\n","import React from 'react';\nimport './Input.css';\n\nexport const Input = (props) => (\n    <div className=\"inputContainer\">\n        <div className=\"input\">{props.input}</div>\n    </div>\n);\n","import React from 'react';\nimport {Button} from './Button/Button';\nimport {Input} from './Input/Input';\nimport * as math from 'mathjs';\n\nclass Calculator extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            clicked: false\n        }\n    }\n\n    addNumber = val => {\n        this.setState({ input: this.state.input + val });\n        this.setState({ clicked: false });\n\n    }\n\n    addOperator = val => {\n        if(!this.state.clicked) {\n            this.setState({ input: this.state.input + val});\n            this.setState({ clicked: true});\n        }\n    }\n\n    handleClear = () => {\n        this.setState({ input: \"\"});\n    }\n\n\n    handleEqual = () => {\n        this.setState({input: math.round(math.eval(this.state.input), 4)});\n    }\n\n    render() {\n        return (\n            <div className=\"calc\" style={this.props.style}>\n                <Input input={this.state.input}></Input>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>7</Button>\n                    <Button handleClick={this.addNumber}>8</Button>\n                    <Button handleClick={this.addNumber}>9</Button>\n                    <Button handleClick={this.addOperator}>/</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>4</Button>\n                    <Button handleClick={this.addNumber}>5</Button>\n                    <Button handleClick={this.addNumber}>6</Button>\n                    <Button handleClick={this.addOperator}>*</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>1</Button>\n                    <Button handleClick={this.addNumber}>2</Button>\n                    <Button handleClick={this.addNumber}>3</Button>\n                    <Button handleClick={this.addOperator}>+</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addOperator}>.</Button>\n                    <Button handleClick={this.addNumber}>0</Button>\n                    <Button handleClick={() => this.handleClear()}>AC</Button>\n                    <Button handleClick={this.addOperator}>-</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>(</Button>\n                    <Button handleClick={this.addNumber}>)</Button>\n                    <Button handleClick={() => this.handleEqual()}>=</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calculator;\n","import React from 'react';\n\nclass Gpa extends React.Component {\n    render() {\n        return (\n            <div>GPA</div>\n        )\n    }\n}\n\nexport default Gpa;\n","import React from 'react';\n\nclass Grades extends React.Component {\n    render() {\n        return (\n            <div>Grades</div>\n        )\n    }\n}\n\nexport default Grades;\n","import React from 'react';\nimport Calculator from './Calculator';\nimport Gpa from './Gpa';\nimport Grades from './Grades';\n\nclass Body extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    calcStyles = {\n        display: \"flex\"\n    }\n\n    gpaStyles = {\n        display: \"none\"\n    }\n\n    gradeStyles = {\n        display: \"none\"\n    }\n\n    render() {\n\n        if(this.props.show === \"GPA Calculator\") {\n            return (\n                <Gpa/>\n            );\n        } else if(this.props.show === \"Class Grade Calculator\") {\n            return (\n                <Grades/>\n            );\n        } else if(this.props.show === \"Calculator\") {\n            return (\n                <div class=\"calculator\">\n                    <Calculator styles = {this.calcStyles}/>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Comp/Header/Header';\nimport Footer from './Comp/Footer/Footer';\nimport Body from './Comp/Body/Body';\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            show: \"Calculator\"\n        }\n    }\n\n    handleClick = val => {\n        this.setState({ show: val});\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Header/>\n                <Body show={this.state.show}/>\n                <Footer onClick={this.handleClick}/>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}