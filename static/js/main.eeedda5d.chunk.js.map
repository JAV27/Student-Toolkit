{"version":3,"sources":["Comp/Header/Header.jsx","Comp/Footer/FooterLink.jsx","Comp/Footer/Footer.jsx","Comp/Body/Button/Button.jsx","Comp/Body/Input/Input.jsx","Comp/Body/Calculator.jsx","Comp/Body/Class.jsx","Comp/Body/Gpa.jsx","Comp/Body/Assignment.jsx","Comp/Body/Grades.jsx","Comp/Body/Body.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","FooterLink","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayed","val","_this2","className","onClick","React","Component","Footer","Footer_FooterLink","isEqual","Button","style","children","backgroundColor","concat","handleClick","Input","input","Calculator","addNumber","setState","clicked","addOperator","handleClear","handleEqual","math","Input_Input_Input","Button_Button_Button","Class","change","event","target","nodeName","grade","value","gradePoints","credits","toPrecision","id","type","onChange","default","min","Gpa","nextId","classes","length","changeGpa","totalGradePoints","totalCredits","i","parseFloat","myRef","gpa","map","classId","Body_Class","ref","key","Assignment","changeGrade","changePercentage","percentage","max","Grades","next","assignments","calcGrade","total","totalGrade","assignmentId","Body_Assignment","Body","calcStyles","display","gpaStyles","gradeStyles","show","Body_Gpa","Body_Grades","class","Body_Calculator","styles","App","Comp_Header_Header","Comp_Body_Body","Comp_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gXASeA,MANf,WACI,OACIC,EAAAC,EAAAC,cAAA,8BCmBOC,cAlBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,UAAWR,EAAKD,MAAMU,KAJXT,wEASV,IAAAU,EAAAP,KACL,OACIR,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OAAOC,QAAS,kBAAMF,EAAKX,MAAMa,QAAQF,EAAKH,MAAMC,aAC9DL,KAAKJ,MAAMU,YAdHI,IAAMC,WCqBhBC,sBAnBX,SAAAA,EAAYhB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACff,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHEP,wEASf,OACIL,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAACmB,EAAD,CAAYP,IAAI,aAAaG,QAAST,KAAKJ,MAAMa,UACjDjB,EAAAC,EAAAC,cAACmB,EAAD,CAAYP,IAAI,iBAAiBG,QAAST,KAAKJ,MAAMa,UACrDjB,EAAAC,EAAAC,cAACmB,EAAD,CAAYP,IAAI,yBAAyBG,QAAST,KAAKJ,MAAMa,kBAfxDC,IAAMC,YCDrBG,UAAU,SAAAR,GACZ,MAAgB,MAARA,IAWCS,EAAS,SAAAnB,GAAK,OACvBJ,EAAAC,EAAAC,cAAA,OAAKsB,OATWV,EASQV,EAAMqB,SARnB,MAARX,EACQ,CAACY,gBAAiB,kBACX,MAARZ,GAAuB,MAARA,GAAuB,MAARA,GAAuB,MAARA,EAC5C,CAACY,gBAAiB,gBADtB,GAMkCV,UAAS,UAAAW,OAAYL,EAAQlB,EAAMqB,UAAY,SAAW,MAAQR,QAAS,kBAAMb,EAAMwB,YAAYxB,EAAMqB,YAC7IrB,EAAMqB,UAVK,IAAAX,GCJPe,UAAQ,SAACzB,GAAD,OACjBJ,EAAAC,EAAAC,cAAA,OAAKc,UAAU,kBACXhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,SAASZ,EAAM0B,mBCuEvBC,cArEX,SAAAA,EAAY3B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACf1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,KAAMJ,KAQV4B,UAAY,SAAAlB,GACRT,EAAK4B,SAAS,CAAEH,MAAOzB,EAAKO,MAAMkB,MAAQhB,IAC1CT,EAAK4B,SAAS,CAAEC,SAAS,KAXV7B,EAenB8B,YAAc,SAAArB,GACNT,EAAKO,MAAMsB,UACX7B,EAAK4B,SAAS,CAAEH,MAAOzB,EAAKO,MAAMkB,MAAQhB,IAC1CT,EAAK4B,SAAS,CAAEC,SAAS,MAlBd7B,EAsBnB+B,YAAc,WACV/B,EAAK4B,SAAS,CAAEH,MAAO,MAvBRzB,EA2BnBgC,YAAc,WACVhC,EAAK4B,SAAS,CAACH,MAAOQ,QAAWA,OAAUjC,EAAKO,MAAMkB,OAAQ,MAzB9DzB,EAAKO,MAAQ,CACTkB,MAAO,GACPI,SAAS,GALE7B,wEA+BV,IAAAU,EAAAP,KACL,OACIR,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OAAOQ,MAAOhB,KAAKJ,MAAMoB,OACpCxB,EAAAC,EAAAC,cAACqC,EAAD,CAAOT,MAAOtB,KAAKI,MAAMkB,QACzB9B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACXhB,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAK2B,aAA1B,MAEJnC,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACXhB,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAK2B,aAA1B,MAEJnC,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACXhB,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAK2B,aAA1B,MAEJnC,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACXhB,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAK2B,aAA1B,KACAnC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAa,kBAAMb,EAAKqB,gBAAhC,MACApC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAK2B,aAA1B,MAEJnC,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACXhB,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAapB,KAAKwB,WAA1B,KACAhC,EAAAC,EAAAC,cAACsC,EAAD,CAAQZ,YAAa,kBAAMb,EAAKsB,gBAAhC,cAhEKnB,IAAMC,WC0DhBsB,cA3DX,SAAAA,EAAYrC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KASVsC,OAAS,SAACC,GACuB,WAA1BA,EAAMC,OAAOC,SACZxC,EAAK4B,SAAS,CAAEa,MAAOH,EAAMC,OAAOG,OAAS,WACzCvC,KAAKyB,SAAS,CAAEe,aAAcxC,KAAKI,MAAMkC,MAAQtC,KAAKI,MAAMqC,SAASC,YAAY,OAErD,UAA1BP,EAAMC,OAAOC,UACnBxC,EAAK4B,SAAS,CAAEgB,QAASN,EAAMC,OAAOG,OAAS,WAC3CvC,KAAKyB,SAAS,CAAEe,aAAcxC,KAAKI,MAAMkC,MAAQtC,KAAKI,MAAMqC,SAASC,YAAY,QAdzF7C,EAAKO,MAAQ,CACToC,YAAa,EACbF,MAAO,EACPG,QAAS,GANE5C,wEAwBf,OACIL,EAAAC,EAAAC,cAAA,OAAKc,UAAW,SAAWR,KAAKJ,MAAM+C,IAClCnD,EAAAC,EAAAC,cAAA,OAAKc,UAAU,QACXhB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,UAEhBpD,EAAAC,EAAAC,cAAA,OAAKc,UAAU,SACXhB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAQmD,SAAU7C,KAAKkC,QACnB1C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,GAAGO,SAAO,IACxBtD,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,MACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,MACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,MACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,MACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,MACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,MACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,OAGR/C,EAAAC,EAAAC,cAAA,OAAKc,UAAU,WACXhB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,SAASG,IAAI,IAAIF,SAAU7C,KAAKkC,UAEhD1C,EAAAC,EAAAC,cAAA,OAAKc,UAAU,eACXhB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WAAMM,KAAKI,MAAMoC,sBAtDjB9B,IAAMC,WCqDXqC,cAlDX,SAAAA,EAAYpD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACfnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KAUVwB,YAAc,WACV,IAAM6B,EAASpD,EAAKO,MAAM8C,QAAQC,OAAO,EACzCtD,EAAK4B,SAAS,CACVyB,QAASrD,EAAKO,MAAM8C,QAAQ/B,OAAO,CAAC8B,OAdzBpD,EAkBnBuD,UAAY,WAKR,IAHA,IAAIC,EAAmB,EACnBC,EAAe,EAEXC,EAAE,EAAEA,EAAE1D,EAAKO,MAAM8C,QAAQC,OAAOI,IACpCF,GAAsCG,WAAW3D,EAAK4D,MAAMF,EAAE,GAAGnD,MAAMoC,aACvEc,GAA8BE,WAAW3D,EAAK4D,MAAMF,EAAE,GAAGnD,MAAMqC,SAGnE5C,EAAK4B,SAAS,CAAEiC,KAAML,EAAiBC,GAAcZ,YAAY,MAzBjE7C,EAAKO,MAAQ,CACT8C,QAAS,CAAC,GACVQ,IAAK,GAGT7D,EAAK4D,MAAQ,GARE5D,wEA+BV,IAAAU,EAAAP,KACL,OACQR,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBAEPR,KAAKI,MAAM8C,QAAQS,IAAI,SAACC,GAAD,OACnBpE,EAAAC,EAAAC,cAACmE,EAAD,CAAOlB,GAAIiB,EAASE,IAAK,SAACA,GAAD,OAASvD,EAAKkD,MAAMG,GAAWE,GAAMC,IAAKH,MAG3EpE,EAAAC,EAAAC,cAAA,UAAQc,UAAU,MAAMC,QAAST,KAAKoB,aAAtC,eACA5B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OAAf,mBACqBR,KAAKI,MAAMsD,IAC5BlE,EAAAC,EAAAC,cAAA,UAAQc,UAAU,UAAUC,QAAST,KAAKoD,WAA1C,oBA5CN1C,IAAMC,WCsCTqD,cArCX,SAAAA,EAAYpE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACfnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMJ,KAQVqE,YAAc,SAAC9B,GACXtC,EAAK4B,SAAS,CAAEa,MAAOH,EAAMC,OAAOG,SAVrB1C,EAanBqE,iBAAmB,SAAC/B,GAChBtC,EAAK4B,SAAS,CAAE0C,WAAYhC,EAAMC,OAAOG,SAXzC1C,EAAKO,MAAQ,CACTkC,MAAO,EACP6B,WAAY,GALDtE,wEAkBf,OACIL,EAAAC,EAAAC,cAAA,OAAKc,UAAU,cACXhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,QACXhB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,UAEhBpD,EAAAC,EAAAC,cAAA,OAAKc,UAAU,SACXhB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,SAASG,IAAI,IAAIqB,IAAI,MAAMvB,SAAU7C,KAAKiE,eAE1DzE,EAAAC,EAAAC,cAAA,OAAKc,UAAU,UACXhB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,SAASG,IAAI,IAAIqB,IAAI,MAAMvB,SAAU7C,KAAKkE,mBAF1D,aA9BSxD,IAAMC,WCiDhB0D,cA9CX,SAAAA,IAAc,IAAAxE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IACVxE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuE,GAAAlE,KAAAH,QAUJoB,YAAc,WACV,IAAMkD,EAAOzE,EAAKO,MAAMmE,YAAYpB,OAAO,EAE3CtD,EAAK4B,SAAS,CAAE8C,YAAa1E,EAAKO,MAAMmE,YAAYpD,OAAOmD,MAdjDzE,EAiBd2E,UAAY,WAGR,IAFA,IAAIC,EAAQ,EAEJlB,EAAE,EAAEA,EAAE1D,EAAKO,MAAMmE,YAAYpB,OAAOI,IAAK,CAE7CkB,GADgB5E,EAAK4D,MAAMF,EAAE,GAAGnD,MAAMkC,MAAMzC,EAAK4D,MAAMF,EAAE,GAAGnD,MAAM+D,WAAW,IAIjFtE,EAAK4B,SAAS,CAAEiD,WAAYD,KAtB5B5E,EAAKO,MAAQ,CACTmE,YAAa,CAAC,GACdG,WAAY,GAGhB7E,EAAK4D,MAAQ,GARH5D,wEA4BL,IAAAU,EAAAP,KACL,OACIR,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBAEPR,KAAKI,MAAMmE,YAAYZ,IAAI,SAACgB,GAAD,OACvBnF,EAAAC,EAAAC,cAACkF,EAAD,CAAYjC,GAAIgC,EAAcZ,IAAKY,EAAcb,IAAK,SAACA,GAAD,OAASvD,EAAKkD,MAAMkB,GAAgBb,OAGlGtE,EAAAC,EAAAC,cAAA,UAAQc,UAAU,MAAMC,QAAST,KAAKoB,aAAtC,eACA5B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,SAAf,gBACkBR,KAAKI,MAAMsE,WAD7B,IAEIlF,EAAAC,EAAAC,cAAA,UAAQc,UAAU,UAAUC,QAAST,KAAKwE,WAA1C,oBAzCC9D,IAAMC,WCyCZkE,cArCX,SAAAA,EAAYjF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACfhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,KAAMJ,KAGVkF,WAAa,CACTC,QAAS,QALMlF,EAQnBmF,UAAY,CACRD,QAAS,QATMlF,EAYnBoF,YAAc,CACVF,QAAS,QAbMlF,wEAkBf,MAAuB,mBAApBG,KAAKJ,MAAMsF,KAEN1F,EAAAC,EAAAC,cAACyF,EAAD,MAEsB,2BAApBnF,KAAKJ,MAAMsF,KAEb1F,EAAAC,EAAAC,cAAC0F,EAAD,MAEsB,eAApBpF,KAAKJ,MAAMsF,KAEb1F,EAAAC,EAAAC,cAAA,OAAK2F,MAAM,cACP7F,EAAAC,EAAAC,cAAC4F,EAAD,CAAYC,OAAUvF,KAAK8E,mBAHhC,SA5BIpE,IAAMC,WC2BV6E,cAxBX,SAAAA,IAAc,IAAA3F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACV3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,QAOJoB,YAAc,SAAAd,GACVT,EAAK4B,SAAS,CAAEyD,KAAM5E,KANtBT,EAAKO,MAAQ,CACT8E,KAAM,cAJArF,wEAaV,OACIL,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACXhB,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAACgG,EAAD,CAAMR,KAAMlF,KAAKI,MAAM8E,OACvB1F,EAAAC,EAAAC,cAACiG,EAAD,CAAQlF,QAAST,KAAKoB,sBAnBpBT,aCMEiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.eeedda5d.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <h1>Student Toolkit</h1>\n    )\n}\n\nexport default Header;\n","import React from 'react';\n\n\n\nclass FooterLink extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayed: this.props.val\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"link\" onClick={() => this.props.onClick(this.state.displayed)}>\n                {this.props.val}\n            </div>\n        )\n    }\n}\n\nexport default FooterLink;\n","import React from 'react';\nimport FooterLink from './FooterLink';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <footer>\n                <FooterLink val=\"Calculator\" onClick={this.props.onClick}/>\n                <FooterLink val=\"GPA Calculator\" onClick={this.props.onClick}/>\n                <FooterLink val=\"Class Grade Calculator\" onClick={this.props.onClick}/>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Button.css';\n\nconst isEqual = val => {\n    return (val === \"=\");\n}\n\nconst changeColor = val => {\n    if(val === \"=\") {\n        return {backgroundColor: \"cornflowerblue\"}\n    } else if(val === \"+\" || val === \"-\" || val === \"*\" || val === \"/\") {\n        return {backgroundColor: \"dimgrey\"}\n    }\n}\n\nexport const Button = props => (\n    <div style={changeColor(props.children)} className={`button ${isEqual(props.children) ? \"double\" : null}`} onClick={() => props.handleClick(props.children)}>\n        {props.children}\n    </div>\n);\n","import React from 'react';\nimport './Input.css';\n\nexport const Input = (props) => (\n    <div className=\"inputContainer\">\n        <div className=\"input\">{props.input}</div>\n    </div>\n);\n","import React from 'react';\nimport {Button} from './Button/Button';\nimport {Input} from './Input/Input';\nimport * as math from 'mathjs';\n\nclass Calculator extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: \"\",\n            clicked: false\n        }\n    }\n\n    addNumber = val => {\n        this.setState({ input: this.state.input + val });\n        this.setState({ clicked: false });\n\n    }\n\n    addOperator = val => {\n        if(!this.state.clicked) {\n            this.setState({ input: this.state.input + val});\n            this.setState({ clicked: true});\n        }\n    }\n\n    handleClear = () => {\n        this.setState({ input: \"\"});\n    }\n\n\n    handleEqual = () => {\n        this.setState({input: math.round(math.eval(this.state.input), 4)});\n    }\n\n    render() {\n        return (\n            <div className=\"calc\" style={this.props.style}>\n                <Input input={this.state.input}></Input>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>7</Button>\n                    <Button handleClick={this.addNumber}>8</Button>\n                    <Button handleClick={this.addNumber}>9</Button>\n                    <Button handleClick={this.addOperator}>/</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>4</Button>\n                    <Button handleClick={this.addNumber}>5</Button>\n                    <Button handleClick={this.addNumber}>6</Button>\n                    <Button handleClick={this.addOperator}>*</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>1</Button>\n                    <Button handleClick={this.addNumber}>2</Button>\n                    <Button handleClick={this.addNumber}>3</Button>\n                    <Button handleClick={this.addOperator}>+</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addOperator}>.</Button>\n                    <Button handleClick={this.addNumber}>0</Button>\n                    <Button handleClick={() => this.handleClear()}>AC</Button>\n                    <Button handleClick={this.addOperator}>-</Button>\n                </div>\n                <div className=\"row\">\n                    <Button handleClick={this.addNumber}>(</Button>\n                    <Button handleClick={this.addNumber}>)</Button>\n                    <Button handleClick={() => this.handleEqual()}>=</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calculator;\n","import React from 'react';\n\nclass Class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gradePoints: 0,\n            grade: 0,\n            credits: 0\n        }\n    }\n\n    change = (event) => {\n        if(event.target.nodeName === \"SELECT\") {\n            this.setState({ grade: event.target.value }, function() {\n                this.setState({ gradePoints: (this.state.grade * this.state.credits).toPrecision(3) });\n            });\n        } else if(event.target.nodeName === \"INPUT\") {\n            this.setState({ credits: event.target.value }, function() {\n                this.setState({ gradePoints: (this.state.grade * this.state.credits).toPrecision(3) });\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div className={'class ' + this.props.id}>\n                <div className=\"name\">\n                    <p>Class Name</p>\n                    <input type=\"text\"/>\n                </div>\n                <div className=\"grade\">\n                    <p>Grade</p>\n                    <select onChange={this.change}>\n                        <option value=\"\" default></option>\n                        <option value=\"4\">A</option>\n                        <option value=\"3.66\">A-</option>\n                        <option value=\"3.33\">B+</option>\n                        <option value=\"3\">B</option>\n                        <option value=\"2.66\">B-</option>\n                        <option value=\"2.33\">C+</option>\n                        <option value=\"2\">C</option>\n                        <option value=\"1.66\">C-</option>\n                        <option value=\"1.33\">D+</option>\n                        <option value=\"1\">D</option>\n                    </select>\n                </div>\n                <div className=\"credits\">\n                    <p>Credits</p>\n                    <input type=\"number\" min=\"0\" onChange={this.change}/>\n                </div>\n                <div className=\"gradePoints\">\n                    <p>Grade Points</p>\n                    <div>{this.state.gradePoints}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Class;\n","import React from 'react';\nimport Class from './Class';\n\nclass Gpa extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            classes: [1],\n            gpa: 0\n        }\n\n        this.myRef = {}\n    }\n\n    handleClick = () => {\n        const nextId = this.state.classes.length+1;\n        this.setState({\n            classes: this.state.classes.concat([nextId])\n        });\n    }\n\n    changeGpa = () => {\n\n        let totalGradePoints = 0;\n        let totalCredits = 0;\n\n        for(let i=0;i<this.state.classes.length;i++) {\n            totalGradePoints = totalGradePoints + parseFloat(this.myRef[i+1].state.gradePoints);\n            totalCredits = totalCredits + parseFloat(this.myRef[i+1].state.credits);\n        }\n\n        this.setState({ gpa: (totalGradePoints/totalCredits).toPrecision(3) });\n    }\n\n    render() {\n        return (\n                <div className=\"classWrapper\">\n                    {\n                        this.state.classes.map((classId) => (\n                            <Class id={classId} ref={(ref) => this.myRef[classId] = ref}  key={classId}/>\n                        ))\n                    }\n                    <button className=\"add\" onClick={this.handleClick}>Add Another</button>\n                    <div className=\"gpa\">\n                        Cumulative GPA: {this.state.gpa}\n                        <button className=\"compute\" onClick={this.changeGpa}>Compute</button>\n                    </div>\n\n                </div>\n        )\n    }\n}\n\nexport default Gpa;\n","import React from 'react';\n\nclass Assignment extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            grade: 0,\n            percentage: 0\n        }\n    }\n\n    changeGrade = (event) => {\n        this.setState({ grade: event.target.value });\n    }\n\n    changePercentage = (event) => {\n        this.setState({ percentage: event.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"assignment\">\n                <div className=\"name\">\n                    <p>Assignment</p>\n                    <input type=\"text\"/>\n                </div>\n                <div className=\"grade\">\n                    <p>Grade</p>\n                    <input type=\"number\" min=\"0\" max=\"100\" onChange={this.changeGrade}/>\n                </div>\n                <div className=\"weight\">\n                    <p>Percentage of Total</p>\n                    <input type=\"number\" min=\"0\" max=\"100\" onChange={this.changePercentage}/>%\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Assignment;\n","import React from 'react';\nimport Assignment from './Assignment';\n\nclass Grades extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            assignments: [1],\n            totalGrade: 0,\n        }\n\n        this.myRef = {}\n    }\n\n    handleClick = () => {\n        const next = this.state.assignments.length+1;\n\n        this.setState({ assignments: this.state.assignments.concat(next) });\n    }\n\n    calcGrade = () => {\n        let total = 0;\n\n        for(let i=0;i<this.state.assignments.length;i++) {\n            let newAmount = this.myRef[i+1].state.grade*this.myRef[i+1].state.percentage/100;\n            total = total + newAmount;\n        }\n\n        this.setState({ totalGrade: total });\n    }\n\n    render() {\n        return (\n            <div className=\"classWrapper\">\n                {\n                    this.state.assignments.map((assignmentId) => (\n                        <Assignment id={assignmentId} key={assignmentId} ref={(ref) => this.myRef[assignmentId] = ref}/>\n                    ))\n                }\n                <button className=\"add\" onClick={this.handleClick}>Add Another</button>\n                <div className=\"grade\">\n                    Class Grade: {this.state.totalGrade}%\n                    <button className=\"compute\" onClick={this.calcGrade}>Compute</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Grades;\n","import React from 'react';\nimport Calculator from './Calculator';\nimport Gpa from './Gpa';\nimport Grades from './Grades';\n\nclass Body extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    calcStyles = {\n        display: \"flex\"\n    }\n\n    gpaStyles = {\n        display: \"none\"\n    }\n\n    gradeStyles = {\n        display: \"none\"\n    }\n\n    render() {\n\n        if(this.props.show === \"GPA Calculator\") {\n            return (\n                <Gpa/>\n            );\n        } else if(this.props.show === \"Class Grade Calculator\") {\n            return (\n                <Grades/>\n            );\n        } else if(this.props.show === \"Calculator\") {\n            return (\n                <div class=\"calculator\">\n                    <Calculator styles = {this.calcStyles}/>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Comp/Header/Header';\nimport Footer from './Comp/Footer/Footer';\nimport Body from './Comp/Body/Body';\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            show: \"Calculator\"\n        }\n    }\n\n    handleClick = val => {\n        this.setState({ show: val});\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Header/>\n                <Body show={this.state.show}/>\n                <Footer onClick={this.handleClick}/>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}